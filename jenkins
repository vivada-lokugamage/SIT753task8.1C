pipeline {
    agent any

    environment {
        DIRECTORY_PATH = "/Users/vivadalokugamage/.jenkins/jobs/Task6.1P"
        TESTING_ENVIRONMENT = "UserTesting_Environment"
        PRODUCTION_ENVIRONMENT = "Vivada"
    }

    stages {
        stage('Build') {
            steps {
                echo "Stage 1: Build"
                echo "Tasks: Build the code using a build automation tool to compile and package the code"
                echo "Tool: Maven - Build automation tool for Java projects"
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                echo "Stage 2: Unit and Integration Tests"
                echo "Tasks: Run unit tests to ensure the code functions as expected and run integration tests to ensure the different components of the application work together as expected"
                echo "Tools: JUnit (unit testing), TestNG (integration testing)"
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo "Stage 3: Code Analysis"
                echo "Tasks: Integrate a code analysis tool to analyse the code and ensure it meets industry standards"
                echo "Tool: SonarQube - Comprehensive code quality and security analysis platform"
            }
        }
        
        stage('Security Scan') {
            steps {
                echo "Stage 4: Security Scan"
                echo "Tasks: Perform a security scan on the code to identify any vulnerabilities"
                echo "Tool: OWASP Dependency Check - Security scanning tool for identifying vulnerabilities in dependencies"
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo "Stage 5: Deploy to Staging"
                echo "Tasks: Deploy the application to a staging server"
                echo "Tool: Ansible - Infrastructure as code tool for deploying to AWS EC2 instances"
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo "Stage 6: Integration Tests on Staging"
                echo "Tasks: Run integration tests on the staging environment to ensure the application functions as expected in a production-like environment"
                echo "Tools: REST-assured (API testing), Selenium (UI testing)"
            }
        }
        
        stage('Deploy to Production') {
            steps {
                echo "Stage 7: Deploy to Production"
                echo "Tasks: Deploy the application to a production server"
                echo "Tool: Ansible with AWS plugins - For deploying to production AWS EC2 instances"
            }
        }
    }
    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline execution failed.'
        }
    }
}
